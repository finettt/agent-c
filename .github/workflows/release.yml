name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            binary_name: agent-c-linux
            compression_tool: upx
            asset_name: agent-c-linux
          - os: macos-latest
            binary_name: agent-c-macos
            compression_tool: gzexe
            asset_name: agent-c-macos

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y gcc curl upx
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew install gcc curl
        fi

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build project
      run: |
        make clean
        make

    - name: Verify binary
      run: |
        ./agent-c --help || true
        ls -lh agent-c*
        file agent-c

    - name: Create release archive
      run: |
        mkdir -p release
        cp agent-c release/${{ matrix.asset_name }}
        chmod +x release/${{ matrix.asset_name }}
        
        # Create checksum file
        cd release
        sha256sum ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
        cd ..

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets-${{ matrix.os }}
        path: |
          release/${{ matrix.asset_name }}
          release/${{ matrix.asset_name }}.sha256
        retention-days: 60

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          Release ${{ steps.version.outputs.VERSION }}
          
          ## Changes
          This release includes precompiled binaries for:
          - Linux (compressed with UPX)
          - macOS (compressed with GZEXE)
          
          ## Installation
          1. Download the appropriate binary for your system
          2. Make it executable: `chmod +x agent-c-*`
          3. Move it to your PATH: `sudo mv agent-c-* /usr/local/bin/`
          
          ## Usage
          ```bash
          export OPENAI_KEY=your_api_key_here
          ./agent-c
          ```
          
          ## Build Information
          - Built from commit: ${{ github.sha }}
          - Build date: ${{ github.run_date }}
        draft: false
        prerelease: false

  upload-assets:
    needs: [build-and-release, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        asset: [agent-c-linux, agent-c-macos]
    steps:
    - uses: actions/checkout@v4
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Upload Linux assets
      if: matrix.asset == 'agent-c-linux'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./artifacts/release-assets-ubuntu-latest/agent-c-linux
        asset_name: agent-c-linux
        asset_content_type: application/octet-stream

    - name: Upload Linux checksum
      if: matrix.asset == 'agent-c-linux'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./artifacts/release-assets-ubuntu-latest/agent-c-linux.sha256
        asset_name: agent-c-linux.sha256
        asset_content_type: text/plain

    - name: Upload macOS assets
      if: matrix.asset == 'agent-c-macos'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./artifacts/release-assets-macos-latest/agent-c-macos
        asset_name: agent-c-macos
        asset_content_type: application/octet-stream

    - name: Upload macOS checksum
      if: matrix.asset == 'agent-c-macos'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./artifacts/release-assets-macos-latest/agent-c-macos.sha256
        asset_name: agent-c-macos.sha256
        asset_content_type: text/plain